// <auto-generated />
using System;
using MOM.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MOM.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MOM.Domain.Common.BaseEntity", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DtId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("MOM.Domain.Common.BasicRelationship", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Depth")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<Guid?>("SourceId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "sourceId");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "targetId");

                    b.HasKey("DtId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("MOM.Domain.Permission.AvailablePermission", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("MenuButtonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.HasIndex("PersonDtId");

                    b.ToTable("AvailablePermissions");
                });

            modelBuilder.Entity("MOM.Domain.Permission.OrgPermission", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MenuButtonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrgDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.HasIndex("OrgDtId");

                    b.ToTable("OrgPermission");
                });

            modelBuilder.Entity("MOM.Domain.Permission.PersonnelClassPermission", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MenuButtonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonnelClassDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.HasIndex("PersonnelClassDtId");

                    b.ToTable("PersonnelClassPermission");
                });

            modelBuilder.Entity("MOM.Domain.Permission.Button", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BaseEntity");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MenuDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MenuDtId");

                    b.ToTable("Buttons");
                });

            modelBuilder.Entity("MOM.Domain.Permission.Menu", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BaseEntity");

                    b.Property<bool>("AlwaysShow")
                        .HasColumnType("bit");

                    b.Property<int>("Depth")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentMenuDtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ParentMenuDtId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BaseEntity");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentID")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "equipmentID");

                    b.Property<int>("EquipmentLevel")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "equipmentLevel");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ResponsibleDtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SourceDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("ResponsibleDtId");

                    b.HasIndex("SourceDtId");

                    b.ToTable("HierarchyScope", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BaseEntity");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.ToTable("OperationalLocation", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BaseEntity");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.ToTable("OperationalLocationClass", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClassProperty", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BaseEntity");

                    b.Property<int?>("PropertyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "propertyType");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.ToTable("OperationalLocationClassProperty", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationProperty", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BaseEntity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.ToTable("OperationalLocationProperty", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BaseEntity");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<Guid?>("HierarchyScopeRelDtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LockoutDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutOnFailure")
                        .HasColumnType("bit");

                    b.Property<string>("OperationalLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "operationalLocation");

                    b.Property<int?>("OperationalLocationType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "operationalLocationType");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkStatus")
                        .HasColumnType("int");

                    b.HasIndex("HierarchyScopeRelDtId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BaseEntity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.ToTable("PersonProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BaseEntity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HierarchyScopeRelDtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ResponsibleDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("HierarchyScopeRelDtId");

                    b.HasIndex("ResponsibleDtId");

                    b.ToTable("PersonnelClasses");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BaseEntity");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "propertyType");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.ToTable("PersonnelClassProperty");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.HierarchyScope.HierarchyScopeContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("HierarchyScopeContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationDefinedByRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationDefinedByRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationHasValuesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationHasValuesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationClassHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationClassHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationClassIncludesPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationClassIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClassProperty.OperationalLocationClassPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationClassPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationProperty.OperationalLocationPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationProperty.OperationalLocationPropertyMapsToRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationPropertyMapsToRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonDefinedByRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonDefinedByRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonHasValuesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonHasValuesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonOperationalLocationRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonOperationalLocationRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonProperty.PersonPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonProperty.PersonPropertyMapsToRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonPropertyMapsToRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClass.PersonnelClassHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelClassHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClass.PersonnelClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelClassIncludesPropertiesOfRelationships");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClassProperty.PersonnelClassPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelClassPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Permission.AvailablePermission", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Person")
                        .WithMany("AvailablePermissions")
                        .HasForeignKey("PersonDtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MOM.Domain.Permission.OrgPermission", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Org")
                        .WithMany("Permissions")
                        .HasForeignKey("OrgDtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Org");
                });

            modelBuilder.Entity("MOM.Domain.Permission.PersonnelClassPermission", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "PersonnelClass")
                        .WithMany("Permissions")
                        .HasForeignKey("PersonnelClassDtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonnelClass");
                });

            modelBuilder.Entity("MOM.Domain.Permission.Button", b =>
                {
                    b.HasOne("MOM.Domain.Permission.Menu", "Menu")
                        .WithMany("Buttons")
                        .HasForeignKey("MenuDtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("MOM.Domain.Permission.Menu", b =>
                {
                    b.HasOne("MOM.Domain.Permission.Menu", "ParentMenu")
                        .WithMany("Children")
                        .HasForeignKey("ParentMenuDtId");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Source")
                        .WithMany()
                        .HasForeignKey("SourceDtId");

                    b.Navigation("Responsible");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", b =>
                {
                    b.OwnsOne("MOM.Domain.isa95.CommonObjectModels.SpatialDefinition", "SpatialDefinition", b1 =>
                        {
                            b1.Property<Guid>("OperationalLocationDtId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Format")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "format");

                            b1.Property<string>("SRID")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "SRID");

                            b1.Property<string>("SRIDauthority")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "SRIDauthority");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "value");

                            b1.HasKey("OperationalLocationDtId");

                            b1.ToTable("OperationalLocation");

                            b1.WithOwner()
                                .HasForeignKey("OperationalLocationDtId");
                        });

                    b.Navigation("SpatialDefinition")
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "HierarchyScopeRel")
                        .WithMany("Peoples")
                        .HasForeignKey("HierarchyScopeRelDtId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.OwnsOne("MOM.Domain.Common.ContactInformation", "ContactInformation", b1 =>
                        {
                            b1.Property<Guid>("PersonDtId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PersonDtId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonDtId");
                        });

                    b.OwnsOne("MOM.Domain.isa95.CommonObjectModels.SpatialDefinition", "SpatialDefinition", b1 =>
                        {
                            b1.Property<Guid>("PersonDtId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Format")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "format");

                            b1.Property<string>("SRID")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "SRID");

                            b1.Property<string>("SRIDauthority")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "SRIDauthority");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "value");

                            b1.HasKey("PersonDtId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonDtId");
                        });

                    b.Navigation("ContactInformation")
                        .IsRequired();

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("SpatialDefinition")
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "HierarchyScopeRel")
                        .WithMany("Teams")
                        .HasForeignKey("HierarchyScopeRelDtId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleDtId");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.HierarchyScope.HierarchyScopeContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Source")
                        .WithMany("Contains")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationDefinedByRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Source")
                        .WithMany("DefinedBy")
                        .HasForeignKey("SourceId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationHasValuesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Source")
                        .WithMany("HasValuesOf")
                        .HasForeignKey("SourceId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Source")
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("SourceId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Source")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", "Source")
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("SourceId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", "Source")
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("SourceId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", "Source")
                        .WithMany("IncludesPropertiesOf")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", "Source")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClassProperty.OperationalLocationClassPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClassProperty", "Source")
                        .WithMany("Contains")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationProperty.OperationalLocationPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationProperty", "Source")
                        .WithMany("Contains")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationProperty.OperationalLocationPropertyMapsToRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationProperty", "Source")
                        .WithMany("MapsTo")
                        .HasForeignKey("SourceId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonDefinedByRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Source")
                        .WithMany("DefinedBy")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonHasValuesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Source")
                        .WithMany("HasValuesOf")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonOperationalLocationRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Source")
                        .WithMany("OperationalLocationRel")
                        .HasForeignKey("SourceId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonProperty.PersonPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", "Source")
                        .WithMany("Contains")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonProperty.PersonPropertyMapsToRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", "Source")
                        .WithMany("MapsTo")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClass.PersonnelClassHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "Source")
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClass.PersonnelClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "Source")
                        .WithMany("IncludesPropertiesOf")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClassProperty.PersonnelClassPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", "Source")
                        .WithMany("Contains")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Permission.Menu", b =>
                {
                    b.Navigation("Buttons");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("Peoples");

                    b.Navigation("Permissions");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", b =>
                {
                    b.Navigation("DefinedBy");

                    b.Navigation("HasValuesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IsMadeUpOf");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", b =>
                {
                    b.Navigation("HasPropertiesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IncludesPropertiesOf");

                    b.Navigation("IsMadeUpOf");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClassProperty", b =>
                {
                    b.Navigation("Contains");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsTo");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", b =>
                {
                    b.Navigation("AvailablePermissions");

                    b.Navigation("DefinedBy");

                    b.Navigation("HasValuesOf");

                    b.Navigation("OperationalLocationRel");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsTo");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", b =>
                {
                    b.Navigation("HasPropertiesOf");

                    b.Navigation("IncludesPropertiesOf");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", b =>
                {
                    b.Navigation("Contains");
                });
#pragma warning restore 612, 618
        }
    }
}

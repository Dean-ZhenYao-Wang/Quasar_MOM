// <auto-generated />
using System;
using MOM.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MOM.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MOM.Domain.Common.BasicRelationship", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "dtId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<Guid?>("SourceId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "sourceId");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "targetId");

                    b.HasKey("DtId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("MOM.Domain.Permission.AvailablePermission", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("MenuButtonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.HasIndex("PersonDtId");

                    b.ToTable("AvailablePermissions");
                });

            modelBuilder.Entity("MOM.Domain.Permission.Button", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MenuDtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DtId");

                    b.HasIndex("MenuDtId");

                    b.ToTable("Buttons");
                });

            modelBuilder.Entity("MOM.Domain.Permission.Menu", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AlwaysShow")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Depth")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentMenuDtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DtId");

                    b.HasIndex("ParentMenuDtId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("MOM.Domain.Permission.Permission", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MenuButtonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonnelClassDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.HasIndex("PersonnelClassDtId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentID")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "equipmentID");

                    b.Property<int>("EquipmentLevel")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "equipmentLevel");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ResponsibleDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.HasIndex("ResponsibleDtId");

                    b.ToTable("HierarchyScope", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClass", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AssemblyRelationship")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "assemblyRelationship");

                    b.Property<int?>("AssemblyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "assemblyType");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.ToTable("MaterialClass");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClassProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PropertyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "propertyType");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("MaterialClassProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinition", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AssemblyRelationship")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "assemblyRelationship");

                    b.Property<int?>("AssemblyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "assemblyType");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "modelNumber");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "number");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "specification");

                    b.Property<string>("Texture")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "texture");

                    b.Property<string>("UnitOfMeasurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "unitOfMeasurement");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "unitPrice");

                    b.Property<double?>("Weight")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "weight");

                    b.HasKey("DtId");

                    b.ToTable("MaterialDefinition");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinitionProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PropertyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "propertyType");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("MaterialDefinitionProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLot", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AssemblyRelationship")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "assemblyRelationship");

                    b.Property<int?>("AssemblyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "assemblyType");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Disposition")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "disposition");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("QuantityUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityUnitOfMeasure");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<string>("StorageLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "storageLocation");

                    b.Property<int?>("StorageLocationType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "storageLocationType");

                    b.HasKey("DtId");

                    b.ToTable("MaterialLot");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLotProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("MaterialLotProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialSublot", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AssemblyRelationship")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "assemblyRelationship");

                    b.Property<int?>("AssemblyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "assemblyType");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Disposition")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "disposition");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("QuantityUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityUnitOfMeasure");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<string>("StorageLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "storageLocation");

                    b.Property<int?>("StorageLocationType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "storageLocationType");

                    b.HasKey("DtId");

                    b.ToTable("MaterialSublot");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.ToTable("OperationalLocation");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.ToTable("OperationalLocationClass");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClassProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PropertyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "propertyType");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("OperationalLocationClassProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("OperationalLocationProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecification", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EquipmentUse")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "equipmentUse");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OperationalLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "operationalLocation");

                    b.Property<int?>("OperationalLocationType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "operationalLocationType");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("QuantityUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("EquipmentSpecification");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecificationProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("QuantityUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityUnitOfMeasure");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("EquipmentSpecificationProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AssemblyRelationship")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "assemblyRelationship");

                    b.Property<int?>("AssemblyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "assemblyType");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("MaterialUse")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "materialUse");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("QuantityUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityUnitOfMeasure");

                    b.Property<string>("StorageLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "storageLocation");

                    b.Property<int?>("StorageLocationType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "storageLocationType");

                    b.HasKey("DtId");

                    b.ToTable("MaterialSpecification");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecificationProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("QuantityUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityUnitOfMeasure");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("MaterialSpecificationProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.ParameterSpecification", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("ParameterSpecification");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecification", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OperationalLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "operationalLocation");

                    b.Property<int?>("OperationalLocationType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "operationalLocationType");

                    b.Property<string>("PersonnelUse")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "personnelUse");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("QuantityUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("PersonnelSpecification");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecificationProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("QuantityUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityUnitOfMeasure");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("PersonnelSpecificationProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecification", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhysicalAssetUse")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "physicalAssetUse");

                    b.Property<string>("PhysicalLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "physicalLocation");

                    b.Property<int?>("PhysicalLocationType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "physicalLocationType");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("QuantityUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("PhysicalAssetSpecification");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecificationProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("QuantityUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityUnitOfMeasure");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("PhysicalAssetSpecificationProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.EvaluatedProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.ToTable("EvaluatedProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.OperationsTestRequirement", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.ToTable("OperationsTestRequirement");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EffectiveEndDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "effectiveEndDate");

                    b.Property<DateTime?>("EffectiveStartDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "effectiveStartDate");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PhysicalSample")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "physicalSample");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "publishedDate");

                    b.Property<string>("RecurrenceQuantity")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "recurrenceQuantity");

                    b.Property<string>("RecurrenceTimeInterval")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "recurrenceTimeInterval");

                    b.Property<string>("TestSampleSize")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "testSampleSize");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "version");

                    b.HasKey("DtId");

                    b.ToTable("TestSpecification");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecificationCriteria", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Expression")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "expression");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OtherResult")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "otherResult");

                    b.Property<int?>("Result")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "result");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "sequence");

                    b.HasKey("DtId");

                    b.ToTable("TestSpecificationCriteria");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecificationProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("TestSpecificationProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestableObject", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.ToTable("TestableObject");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestableObjectProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.ToTable("TestableObjectProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FailedCount")
                        .HasColumnType("int");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LockoutDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutOnFailure")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("OperationalLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "operationalLocation");

                    b.Property<int?>("OperationalLocationType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "operationalLocationType");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkStatus")
                        .HasColumnType("int");

                    b.HasKey("DtId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("PersonProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.ToTable("PersonnelClasses");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PropertyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "propertyType");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("PersonnelClassProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.Equipment", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfPurchase")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "dateOfPurchase");

                    b.Property<int>("DepreciationLife")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "depreciationLife");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<DateTime>("EnabledTime")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "enabledTime");

                    b.Property<int?>("EquipmentLevel")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "equipmentLevel");

                    b.Property<DateTime?>("FactoryDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "factoryDate");

                    b.Property<string>("FactoryNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "factoryNumber");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("InitialPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "initialPrice");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "modelNumber");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "number");

                    b.Property<Guid?>("ResponsibleDtId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "responsibleDtId");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "specification");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "supplier");

                    b.Property<Guid?>("UseDepartmentDtId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "useDepartmentDtId");

                    b.Property<DateTime?>("WarrantyPeriod")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "warrantyPeriod");

                    b.HasKey("DtId");

                    b.HasIndex("ResponsibleDtId");

                    b.HasIndex("UseDepartmentDtId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClass", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipmentLevel")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "equipmentLevel");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DtId");

                    b.ToTable("EquipmentClass");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClassProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PropertyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "propertyType");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("EquipmentClassProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("EquipmentProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAsset", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FixedAssetID")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "fixedAssetID");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhysicalLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "physicalLocation");

                    b.Property<int?>("PhysicalLocationType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "physicalLocationType");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "vendorID");

                    b.HasKey("DtId");

                    b.ToTable("PhysicalAsset");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClass", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HierarchyScope")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "manufacturer");

                    b.HasKey("DtId");

                    b.ToTable("PhysicalAssetClass");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClassProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PropertyType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "propertyType");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("PhysicalAssetClassProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("PhysicalAssetProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.ProcessSegment.MaterialSegmentSpecificationProperty", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("QuantityUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityUnitOfMeasure");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("ValueUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "valueUnitOfMeasure");

                    b.HasKey("DtId");

                    b.ToTable("MaterialSegmentSpecificationProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part4.WorkDefinition.WorkDefinition", b =>
                {
                    b.Property<Guid>("DtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "duration");

                    b.Property<string>("DurationUnitOfMeasure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "durationUnitOfMeasure");

                    b.Property<string>("HierarchyScope")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "hierarchyScope");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "publishedDate");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "version");

                    b.Property<int?>("WorkType")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "workType");

                    b.HasKey("DtId");

                    b.ToTable("WorkDefinition");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Area.AreaWorkCenterRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("AreaWorkCenterRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Enterprise.EnterpriseSiteRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("EnterpriseSiteRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Equipment.EquipmentDefinedByRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentDefinedByRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Equipment.EquipmentHasValuesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentHasValuesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Equipment.EquipmentHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Equipment.EquipmentImplementedByRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentImplementedByRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Equipment.EquipmentIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentClass.EquipmentClassHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentClassDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentClassDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentClassHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentClass.EquipmentClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentClassDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentClassDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentClassHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentClass.EquipmentClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentClassIncludesPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentClass.EquipmentClassIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentClassIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentClassProperty.EquipmentClassPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentClassPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentProperty.EquipmentPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentProperty.EquipmentPropertyMapsToRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentPropertyMapsToRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationCorrespondsToEquipmentClassRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentSpecificationCorrespondsToEquipmentClassRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationCorrespondsToEquipmentRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentSpecificationCorrespondsToEquipmentRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentSpecificationHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentSpecificationHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentSpecificationIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationOperationalLocationRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentSpecificationOperationalLocationRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationSpecifiesRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentSpecificationSpecifiesRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecificationProperty.EquipmentSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentSpecificationPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecificationProperty.EquipmentSpecificationPropertyMapsToClassPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentSpecificationPropertyMapsToClassPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecificationProperty.EquipmentSpecificationPropertyMapsToPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EquipmentSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EquipmentSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EquipmentSpecificationPropertyMapsToPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EvaluatedProperty.EvaluatedPropertyCorrespondsToRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EvaluatedPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EvaluatedPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EvaluatedPropertyCorrespondsToRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EvaluatedProperty.EvaluatedPropertyMeasuredWithMethodOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EvaluatedPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EvaluatedPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EvaluatedPropertyMeasuredWithMethodOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EvaluatedProperty.EvaluatedPropertyReferencesRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("EvaluatedPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("EvaluatedPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("EvaluatedPropertyReferencesRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.HierarchyScope.HierarchyScopeContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("HierarchyScopeContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialClass.MaterialClassHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialClassDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialClassDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialClassHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialClass.MaterialClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialClassDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialClassDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialClassHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialClass.MaterialClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialClassIncludesPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialClass.MaterialClassIsAssembledFromRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialClassIsAssembledFromRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialClassProperty.MaterialClassPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialClassPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinition.MaterialDefinitionHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialDefinitionDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialDefinitionDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialDefinitionHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinition.MaterialDefinitionHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialDefinitionDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialDefinitionDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialDefinitionHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinition.MaterialDefinitionIsAssembledFromRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialDefinitionIsAssembledFromRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinition.MaterialDefinitionIsMemberOfClassRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialDefinitionDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialDefinitionDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialDefinitionIsMemberOfClassRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinitionProperty.MaterialDefinitionPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialDefinitionPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinitionProperty.MaterialDefinitionPropertyMapsToRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialDefinitionPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialDefinitionPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialDefinitionPropertyMapsToRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotDefinedByRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialLotDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialLotDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialLotDefinedByRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotHasValuesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialLotDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialLotDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialLotHasValuesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialLotDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialLotDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialLotHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotIsAssembledFromRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialLotIsAssembledFromRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotIsAssembledFromSublotRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialLotDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialLotDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialLotIsAssembledFromSublotRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotStorageLocationRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialLotDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialLotDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialLotStorageLocationRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLotProperty.MaterialLotPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialLotPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLotProperty.MaterialLotPropertyMapsToRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialLotPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialLotPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialLotPropertyMapsToRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSegmentSpecificationProperty.MaterialSegmentSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSegmentSpecificationPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSegmentSpecificationProperty.MaterialSegmentSpecificationPropertyMapsToClassPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSegmentSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSegmentSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSegmentSpecificationPropertyMapsToClassPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSegmentSpecificationProperty.MaterialSegmentSpecificationPropertyMapsToDefinitionPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSegmentSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSegmentSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSegmentSpecificationPropertyMapsToDefinitionPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSegmentSpecificationProperty.MaterialSegmentSpecificationPropertyMapsToLotPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSegmentSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSegmentSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSegmentSpecificationPropertyMapsToLotPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationCorrespondsToClassRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationCorrespondsToClassRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationCorrespondsToDefinitionRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationCorrespondsToDefinitionRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationCorrespondsToLotRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationCorrespondsToLotRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationCorrespondsToSublotRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationCorrespondsToSublotRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationIsAssembledFromRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationIsAssembledFromRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationSpecifiesRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationSpecifiesRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationStorageLocationRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationStorageLocationRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecificationProperty.MaterialSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecificationProperty.MaterialSpecificationPropertyMapsToClassPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationPropertyMapsToClassPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecificationProperty.MaterialSpecificationPropertyMapsToDefinitionPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationPropertyMapsToDefinitionPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecificationProperty.MaterialSpecificationPropertyMapsToLotPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSpecificationPropertyMapsToLotPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotHasValuesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSublotDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSublotDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSublotHasValuesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSublotDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSublotDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSublotHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotIsAssembledFromLotRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSublotDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSublotDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSublotIsAssembledFromLotRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotIsAssembledFromRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSublotIsAssembledFromRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSublotIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotStorageLocationRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("MaterialSublotDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("MaterialSublotDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("MaterialSublotStorageLocationRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationDefinedByRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("OperationalLocationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OperationalLocationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationDefinedByRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationHasValuesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("OperationalLocationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OperationalLocationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationHasValuesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("OperationalLocationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OperationalLocationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("OperationalLocationClassDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OperationalLocationClassDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationClassHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("OperationalLocationClassDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OperationalLocationClassDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationClassHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationClassIncludesPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationClassIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClassProperty.OperationalLocationClassPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationClassPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationProperty.OperationalLocationPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationProperty.OperationalLocationPropertyMapsToRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("OperationalLocationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OperationalLocationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationalLocationPropertyMapsToRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationsTestRequirement.OperationsTestRequirementCorrespondsToAnElementInRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("OperationsTestRequirementDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OperationsTestRequirementDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationsTestRequirementCorrespondsToAnElementInRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationsTestRequirement.OperationsTestRequirementMapsToAPropertyElementInRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("OperationsTestRequirementDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OperationsTestRequirementDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationsTestRequirementMapsToAPropertyElementInRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationsTestRequirement.OperationsTestRequirementSpecifiesRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("OperationsTestRequirementDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OperationsTestRequirementDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("OperationsTestRequirementSpecifiesRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.ParameterSpecification.ParameterSpecificationContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("ParameterSpecificationContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.ParameterSpecification.ParameterSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("ParameterSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("ParameterSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("ParameterSpecificationHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonDefinedByRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonDefinedByRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonHasValuesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonHasValuesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PersonDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonOperationalLocationRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PersonDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonOperationalLocationRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonProperty.PersonPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonProperty.PersonPropertyMapsToRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonPropertyMapsToRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClass.PersonnelClassHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelClassHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClass.PersonnelClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelClassHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClass.PersonnelClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelClassIncludesPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClassProperty.PersonnelClassPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelClassPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationCorrespondsToPersonRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PersonnelSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonnelSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelSpecificationCorrespondsToPersonRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationCorrespondsToPersonnelClassRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PersonnelSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonnelSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelSpecificationCorrespondsToPersonnelClassRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PersonnelSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonnelSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelSpecificationHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PersonnelSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonnelSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelSpecificationHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelSpecificationIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationOperationalLocationRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PersonnelSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonnelSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelSpecificationOperationalLocationRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationSpecifiesRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PersonnelSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonnelSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelSpecificationSpecifiesRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecificationProperty.PersonnelSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelSpecificationPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecificationProperty.PersonnelSpecificationPropertyMapsToClassPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PersonnelSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonnelSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelSpecificationPropertyMapsToClassPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecificationProperty.PersonnelSpecificationPropertyMapsToPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PersonnelSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonnelSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PersonnelSpecificationPropertyMapsToPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAsset.PhysicalAssetDefinedByRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetDefinedByRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAsset.PhysicalAssetHasValuesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetHasValuesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAsset.PhysicalAssetHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAsset.PhysicalAssetIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAsset.PhysicalAssetPhysicalLocationRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetPhysicalLocationRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetClass.PhysicalAssetClassHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetClassDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetClassDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetClassHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetClass.PhysicalAssetClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetClassDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetClassDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetClassHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetClass.PhysicalAssetClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetClassIncludesPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetClass.PhysicalAssetClassIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetClassIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetClassProperty.PhysicalAssetClassPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetClassPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetProperty.PhysicalAssetPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetProperty.PhysicalAssetPropertyMapsToRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetPropertyMapsToRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationCorrespondsToPhysicalAssetClassRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetSpecificationCorrespondsToPhysicalAssetClassRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationCorrespondsToPhysicalAssetRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetSpecificationCorrespondsToPhysicalAssetRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationHasPropertiesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetSpecificationHasPropertiesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetSpecificationHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetSpecificationIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationPhysicalLocationRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetSpecificationPhysicalLocationRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationSpecifiesRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetSpecificationDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetSpecificationSpecifiesRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecificationProperty.PhysicalAssetSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetSpecificationPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecificationProperty.PhysicalAssetSpecificationPropertyMapsToClassPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetSpecificationPropertyMapsToClassPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecificationProperty.PhysicalAssetSpecificationPropertyMapsToPropertyRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("PhysicalAssetSpecificationPropertyDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PhysicalAssetSpecificationPropertyDtId");

                    b.HasIndex("TargetId");

                    b.ToTable("PhysicalAssetSpecificationPropertyMapsToPropertyRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Site.SiteAreaRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("SiteAreaRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationEvaluatesRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("TestSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("TestSpecificationDtId");

                    b.ToTable("TestSpecificationEvaluatesRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationHasValuesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("TestSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("TestSpecificationDtId");

                    b.ToTable("TestSpecificationHasValuesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("TestSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("TestSpecificationDtId");

                    b.ToTable("TestSpecificationHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationIsMadeUpOfCriteriaRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("TestSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("TestSpecificationDtId");

                    b.ToTable("TestSpecificationIsMadeUpOfCriteriaRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationIsMadeUpOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("TestSpecificationIsMadeUpOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationSpecifiesTestForObjectRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("TestSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("TestSpecificationDtId");

                    b.ToTable("TestSpecificationSpecifiesTestForObjectRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationSpecifiesTestForOperationsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("TestSpecificationDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("TestSpecificationDtId");

                    b.ToTable("TestSpecificationSpecifiesTestForOperationsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecificationCriteria.TestSpecificationCriteriaReferencesRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("TestSpecificationCriteriaDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("TestSpecificationCriteriaDtId");

                    b.ToTable("TestSpecificationCriteriaReferencesRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecificationProperty.TestSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("TargetId");

                    b.ToTable("TestSpecificationPropertyContainsRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestableObject.TestableObjectHasTestableObjectPropertyValuesOfRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("TestableObjectDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("TestableObjectDtId");

                    b.ToTable("TestableObjectHasTestableObjectPropertyValuesOfRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestableObject.TestableObjectSpecifiesRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("TestableObjectDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("TestableObjectDtId");

                    b.ToTable("TestableObjectSpecifiesRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkCenter.WorkCenterWorkUnitRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.HasIndex("SourceId");

                    b.HasIndex("TargetId");

                    b.ToTable("WorkCenterWorkUnitRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionContainsEquipmentRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("WorkDefinitionDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("WorkDefinitionDtId");

                    b.ToTable("WorkDefinitionContainsEquipmentRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionContainsMaterialRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("WorkDefinitionDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("WorkDefinitionDtId");

                    b.ToTable("WorkDefinitionContainsMaterialRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionContainsParameterRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("WorkDefinitionDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("WorkDefinitionDtId");

                    b.ToTable("WorkDefinitionContainsParameterRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionContainsPersonnelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("WorkDefinitionDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("WorkDefinitionDtId");

                    b.ToTable("WorkDefinitionContainsPersonnelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionContainsPhysicalAssetRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("WorkDefinitionDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("WorkDefinitionDtId");

                    b.ToTable("WorkDefinitionContainsPhysicalAssetRelationship");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionHierarchyScopeRelRelationship", b =>
                {
                    b.HasBaseType("MOM.Domain.Common.BasicRelationship");

                    b.Property<Guid?>("WorkDefinitionDtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TargetId");

                    b.HasIndex("WorkDefinitionDtId");

                    b.ToTable("WorkDefinitionHierarchyScopeRelRelationship");
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.Area", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.CommonObjectModels.HierarchyScope");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Area", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.Enterprise", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.CommonObjectModels.HierarchyScope");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Enterprise", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.Site", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.CommonObjectModels.HierarchyScope");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Site", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.CommonObjectModels.HierarchyScope");

                    b.ToTable("WorkCenter", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.WorkUnit", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.CommonObjectModels.HierarchyScope");

                    b.ToTable("WorkUnit", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.ProcessCell", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter");

                    b.ToTable("ProcessCell", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.ProductionLine", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter");

                    b.ToTable("ProductionLine", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.ProductionUnit", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter");

                    b.ToTable("ProductionUnit", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.StorageZone", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter");

                    b.ToTable("StorageZone", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.StorageUnit", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.EquipmentHierarchy.WorkUnit");

                    b.ToTable("StorageUnit", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.Unit", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.EquipmentHierarchy.WorkUnit");

                    b.ToTable("Unit", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.WorkCell", b =>
                {
                    b.HasBaseType("MOM.Domain.isa95.EquipmentHierarchy.WorkUnit");

                    b.ToTable("WorkCell", (string)null);
                });

            modelBuilder.Entity("MOM.Domain.Permission.AvailablePermission", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Person")
                        .WithMany("AvailablePermissions")
                        .HasForeignKey("PersonDtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MOM.Domain.Permission.Button", b =>
                {
                    b.HasOne("MOM.Domain.Permission.Menu", "Menu")
                        .WithMany("Buttons")
                        .HasForeignKey("MenuDtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("MOM.Domain.Permission.Menu", b =>
                {
                    b.HasOne("MOM.Domain.Permission.Menu", "ParentMenu")
                        .WithMany("Children")
                        .HasForeignKey("ParentMenuDtId");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("MOM.Domain.Permission.Permission", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "PersonnelClass")
                        .WithMany("Permissions")
                        .HasForeignKey("PersonnelClassDtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonnelClass");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleDtId");

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.Equipment", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "UseDepartment")
                        .WithMany()
                        .HasForeignKey("UseDepartmentDtId");

                    b.OwnsOne("MOM.Domain.isa95.CommonObjectModels.SpatialDefinition", "SpatialDefinition", b1 =>
                        {
                            b1.Property<Guid>("EquipmentDtId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Format")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "format");

                            b1.Property<string>("SRID")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "SRID");

                            b1.Property<string>("SRIDauthority")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "SRIDauthority");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)")
                                .HasAnnotation("Relational:JsonPropertyName", "value");

                            b1.HasKey("EquipmentDtId");

                            b1.ToTable("Equipment");

                            b1.WithOwner()
                                .HasForeignKey("EquipmentDtId");
                        });

                    b.Navigation("Responsible");

                    b.Navigation("SpatialDefinition");

                    b.Navigation("UseDepartment");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Area.AreaWorkCenterRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.Area", "Source")
                        .WithMany("WorkCenter")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Enterprise.EnterpriseSiteRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.Enterprise", "Source")
                        .WithMany("Site")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.Site", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Equipment.EquipmentDefinedByRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.Equipment", null)
                        .WithMany("DefinedBy")
                        .HasForeignKey("EquipmentDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Equipment.EquipmentHasValuesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.Equipment", null)
                        .WithMany("HasValuesOf")
                        .HasForeignKey("EquipmentDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Equipment.EquipmentHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.Equipment", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("EquipmentDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Equipment.EquipmentImplementedByRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.Equipment", null)
                        .WithMany("ImplementedBy")
                        .HasForeignKey("EquipmentDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAsset", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Equipment.EquipmentIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.Equipment", "Target")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentClass.EquipmentClassHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClass", null)
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("EquipmentClassDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentClass.EquipmentClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClass", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("EquipmentClassDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentClass.EquipmentClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClass", "Target")
                        .WithMany("IncludesPropertiesOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentClass.EquipmentClassIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClass", "Target")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentClassProperty.EquipmentClassPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClassProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentProperty.EquipmentPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentProperty.EquipmentPropertyMapsToRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentProperty", null)
                        .WithMany("MapsTo")
                        .HasForeignKey("EquipmentPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationCorrespondsToEquipmentClassRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecification", null)
                        .WithMany("CorrespondsToEquipmentClass")
                        .HasForeignKey("EquipmentSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationCorrespondsToEquipmentRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecification", null)
                        .WithMany("CorrespondsToEquipment")
                        .HasForeignKey("EquipmentSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.Equipment", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecification", null)
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("EquipmentSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecificationProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecification", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("EquipmentSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecification", "Target")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationOperationalLocationRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecification", null)
                        .WithMany("OperationalLocationRel")
                        .HasForeignKey("EquipmentSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecification.EquipmentSpecificationSpecifiesRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecification", null)
                        .WithMany("Specifies")
                        .HasForeignKey("EquipmentSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecificationProperty.EquipmentSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecificationProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecificationProperty.EquipmentSpecificationPropertyMapsToClassPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecificationProperty", null)
                        .WithMany("MapsToClassProperty")
                        .HasForeignKey("EquipmentSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EquipmentSpecificationProperty.EquipmentSpecificationPropertyMapsToPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecificationProperty", null)
                        .WithMany("MapsToProperty")
                        .HasForeignKey("EquipmentSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EvaluatedProperty.EvaluatedPropertyCorrespondsToRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.EvaluatedProperty", null)
                        .WithMany("CorrespondsTo")
                        .HasForeignKey("EvaluatedPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestableObjectProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EvaluatedProperty.EvaluatedPropertyMeasuredWithMethodOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.EvaluatedProperty", null)
                        .WithMany("MeasuredWithMethodOf")
                        .HasForeignKey("EvaluatedPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part4.WorkDefinition.WorkDefinition", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.EvaluatedProperty.EvaluatedPropertyReferencesRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.EvaluatedProperty", null)
                        .WithMany("References")
                        .HasForeignKey("EvaluatedPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecificationCriteria", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.HierarchyScope.HierarchyScopeContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Source")
                        .WithMany("Contains")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialClass.MaterialClassHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClass", null)
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("MaterialClassDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialClass.MaterialClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClass", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("MaterialClassDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialClass.MaterialClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClass", "Target")
                        .WithMany("IncludesPropertiesOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialClass.MaterialClassIsAssembledFromRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClass", "Target")
                        .WithMany("IsAssembledFrom")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialClassProperty.MaterialClassPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClassProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinition.MaterialDefinitionHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinition", null)
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("MaterialDefinitionDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinitionProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinition.MaterialDefinitionHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinition", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("MaterialDefinitionDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinition.MaterialDefinitionIsAssembledFromRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinition", "Target")
                        .WithMany("IsAssembledFrom")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinition.MaterialDefinitionIsMemberOfClassRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinition", null)
                        .WithMany("IsMemberOfClass")
                        .HasForeignKey("MaterialDefinitionDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinitionProperty.MaterialDefinitionPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinitionProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialDefinitionProperty.MaterialDefinitionPropertyMapsToRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinitionProperty", null)
                        .WithMany("MapsTo")
                        .HasForeignKey("MaterialDefinitionPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotDefinedByRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLot", null)
                        .WithMany("DefinedBy")
                        .HasForeignKey("MaterialLotDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinition", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotHasValuesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLot", null)
                        .WithMany("HasValuesOf")
                        .HasForeignKey("MaterialLotDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLotProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLot", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("MaterialLotDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotIsAssembledFromRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLot", "Target")
                        .WithMany("IsAssembledFrom")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotIsAssembledFromSublotRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLot", null)
                        .WithMany("IsAssembledFromSublot")
                        .HasForeignKey("MaterialLotDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialSublot", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLot.MaterialLotStorageLocationRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLot", null)
                        .WithMany("StorageLocationRel")
                        .HasForeignKey("MaterialLotDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLotProperty.MaterialLotPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLotProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialLotProperty.MaterialLotPropertyMapsToRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLotProperty", null)
                        .WithMany("MapsTo")
                        .HasForeignKey("MaterialLotPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinitionProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSegmentSpecificationProperty.MaterialSegmentSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.ProcessSegment.MaterialSegmentSpecificationProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSegmentSpecificationProperty.MaterialSegmentSpecificationPropertyMapsToClassPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.ProcessSegment.MaterialSegmentSpecificationProperty", null)
                        .WithMany("MapsToClassProperty")
                        .HasForeignKey("MaterialSegmentSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSegmentSpecificationProperty.MaterialSegmentSpecificationPropertyMapsToDefinitionPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.ProcessSegment.MaterialSegmentSpecificationProperty", null)
                        .WithMany("MapsToDefinitionProperty")
                        .HasForeignKey("MaterialSegmentSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinitionProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSegmentSpecificationProperty.MaterialSegmentSpecificationPropertyMapsToLotPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.ProcessSegment.MaterialSegmentSpecificationProperty", null)
                        .WithMany("MapsToLotProperty")
                        .HasForeignKey("MaterialSegmentSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLotProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationCorrespondsToClassRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", null)
                        .WithMany("CorrespondsToClass")
                        .HasForeignKey("MaterialSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationCorrespondsToDefinitionRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", null)
                        .WithMany("CorrespondsToDefinition")
                        .HasForeignKey("MaterialSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinition", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationCorrespondsToLotRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", null)
                        .WithMany("CorrespondsToLot")
                        .HasForeignKey("MaterialSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLot", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationCorrespondsToSublotRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", null)
                        .WithMany("CorrespondsToSublot")
                        .HasForeignKey("MaterialSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialSublot", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", null)
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("MaterialSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecificationProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("MaterialSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationIsAssembledFromRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", "Target")
                        .WithMany("IsAssembledFrom")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationSpecifiesRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", null)
                        .WithMany("Specifies")
                        .HasForeignKey("MaterialSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecification.MaterialSpecificationStorageLocationRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", null)
                        .WithMany("StorageLocationRel")
                        .HasForeignKey("MaterialSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecificationProperty.MaterialSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecificationProperty", null)
                        .WithMany("Contains")
                        .HasForeignKey("MaterialSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.ProcessSegment.MaterialSegmentSpecificationProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecificationProperty.MaterialSpecificationPropertyMapsToClassPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecificationProperty", null)
                        .WithMany("MapsToClassProperty")
                        .HasForeignKey("MaterialSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecificationProperty.MaterialSpecificationPropertyMapsToDefinitionPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecificationProperty", null)
                        .WithMany("MapsToDefinitionProperty")
                        .HasForeignKey("MaterialSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinitionProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSpecificationProperty.MaterialSpecificationPropertyMapsToLotPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecificationProperty", null)
                        .WithMany("MapsToLotProperty")
                        .HasForeignKey("MaterialSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLotProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotHasValuesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialSublot", null)
                        .WithMany("HasValuesOf")
                        .HasForeignKey("MaterialSublotDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLotProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialSublot", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("MaterialSublotDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotIsAssembledFromLotRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialSublot", null)
                        .WithMany("IsAssembledFromLot")
                        .HasForeignKey("MaterialSublotDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLot", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotIsAssembledFromRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialSublot", "Target")
                        .WithMany("IsAssembledFrom")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialSublot", "Target")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.MaterialSublot.MaterialSublotStorageLocationRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialSublot", null)
                        .WithMany("StorageLocationRel")
                        .HasForeignKey("MaterialSublotDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationDefinedByRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", null)
                        .WithMany("DefinedBy")
                        .HasForeignKey("OperationalLocationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationHasValuesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", null)
                        .WithMany("HasValuesOf")
                        .HasForeignKey("OperationalLocationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("OperationalLocationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocation.OperationalLocationIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Target")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", null)
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("OperationalLocationClassDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("OperationalLocationClassDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", "Target")
                        .WithMany("IncludesPropertiesOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClass.OperationalLocationClassIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", "Target")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationClassProperty.OperationalLocationClassPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClassProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationProperty.OperationalLocationPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationalLocationProperty.OperationalLocationPropertyMapsToRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationProperty", null)
                        .WithMany("MapsTo")
                        .HasForeignKey("OperationalLocationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationsTestRequirement.OperationsTestRequirementCorrespondsToAnElementInRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.OperationsTestRequirement", null)
                        .WithMany("CorrespondsToAnElementIn")
                        .HasForeignKey("OperationsTestRequirementDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestableObject", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationsTestRequirement.OperationsTestRequirementMapsToAPropertyElementInRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.OperationsTestRequirement", null)
                        .WithMany("MapsToAPropertyElementIn")
                        .HasForeignKey("OperationsTestRequirementDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestableObjectProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.OperationsTestRequirement.OperationsTestRequirementSpecifiesRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.OperationsTestRequirement", null)
                        .WithMany("Specifies")
                        .HasForeignKey("OperationsTestRequirementDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.ParameterSpecification.ParameterSpecificationContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.ParameterSpecification", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.ParameterSpecification.ParameterSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.ParameterSpecification", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("ParameterSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonDefinedByRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Source")
                        .WithMany("DefinedBy")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonHasValuesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Source")
                        .WithMany("HasValuesOf")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("PersonDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Person.PersonOperationalLocationRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", null)
                        .WithMany("OperationalLocationRel")
                        .HasForeignKey("PersonDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonProperty.PersonPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", "Source")
                        .WithMany("Contains")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonProperty.PersonPropertyMapsToRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", "Source")
                        .WithMany("MapsTo")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClass.PersonnelClassHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "Source")
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClass.PersonnelClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "Source")
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClass.PersonnelClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "Source")
                        .WithMany("IncludesPropertiesOf")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelClassProperty.PersonnelClassPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", "Source")
                        .WithMany("Contains")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationCorrespondsToPersonRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecification", null)
                        .WithMany("CorrespondsToPerson")
                        .HasForeignKey("PersonnelSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationCorrespondsToPersonnelClassRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecification", null)
                        .WithMany("CorrespondsToPersonnelClass")
                        .HasForeignKey("PersonnelSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecification", null)
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("PersonnelSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecificationProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecification", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("PersonnelSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecification", "Target")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationOperationalLocationRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecification", null)
                        .WithMany("OperationalLocationRel")
                        .HasForeignKey("PersonnelSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecification.PersonnelSpecificationSpecifiesRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecification", null)
                        .WithMany("Specifies")
                        .HasForeignKey("PersonnelSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecificationProperty.PersonnelSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecificationProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecificationProperty.PersonnelSpecificationPropertyMapsToClassPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecificationProperty", null)
                        .WithMany("MapsToClassProperty")
                        .HasForeignKey("PersonnelSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PersonnelSpecificationProperty.PersonnelSpecificationPropertyMapsToPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecificationProperty", null)
                        .WithMany("MapsToProperty")
                        .HasForeignKey("PersonnelSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAsset.PhysicalAssetDefinedByRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAsset", null)
                        .WithMany("DefinedBy")
                        .HasForeignKey("PhysicalAssetDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAsset.PhysicalAssetHasValuesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAsset", null)
                        .WithMany("HasValuesOf")
                        .HasForeignKey("PhysicalAssetDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAsset.PhysicalAssetHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAsset", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("PhysicalAssetDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAsset.PhysicalAssetIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAsset", "Target")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAsset.PhysicalAssetPhysicalLocationRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAsset", null)
                        .WithMany("PhysicalLocationRel")
                        .HasForeignKey("PhysicalAssetDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetClass.PhysicalAssetClassHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClass", null)
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("PhysicalAssetClassDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetClass.PhysicalAssetClassHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClass", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("PhysicalAssetClassDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetClass.PhysicalAssetClassIncludesPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClass", "Target")
                        .WithMany("IncludesPropertiesOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetClass.PhysicalAssetClassIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClass", "Target")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetClassProperty.PhysicalAssetClassPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClassProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetProperty.PhysicalAssetPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetProperty.PhysicalAssetPropertyMapsToRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetProperty", null)
                        .WithMany("MapsTo")
                        .HasForeignKey("PhysicalAssetPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationCorrespondsToPhysicalAssetClassRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecification", null)
                        .WithMany("CorrespondsToPhysicalAssetClass")
                        .HasForeignKey("PhysicalAssetSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClass", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationCorrespondsToPhysicalAssetRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecification", null)
                        .WithMany("CorrespondsToPhysicalAsset")
                        .HasForeignKey("PhysicalAssetSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAsset", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationHasPropertiesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecification", null)
                        .WithMany("HasPropertiesOf")
                        .HasForeignKey("PhysicalAssetSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecificationProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecification", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("PhysicalAssetSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecification", "Target")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationPhysicalLocationRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecification", null)
                        .WithMany("PhysicalLocationRel")
                        .HasForeignKey("PhysicalAssetSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecification.PhysicalAssetSpecificationSpecifiesRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecification", null)
                        .WithMany("Specifies")
                        .HasForeignKey("PhysicalAssetSpecificationDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecificationProperty.PhysicalAssetSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecificationProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecificationProperty.PhysicalAssetSpecificationPropertyMapsToClassPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecificationProperty", null)
                        .WithMany("MapsToClassProperty")
                        .HasForeignKey("PhysicalAssetSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClassProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.PhysicalAssetSpecificationProperty.PhysicalAssetSpecificationPropertyMapsToPropertyRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecificationProperty", null)
                        .WithMany("MapsToProperty")
                        .HasForeignKey("PhysicalAssetSpecificationPropertyDtId");

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.Site.SiteAreaRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.Site", "Source")
                        .WithMany("Area")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.Area", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationEvaluatesRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.EvaluatedProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", null)
                        .WithMany("Evaluates")
                        .HasForeignKey("TestSpecificationDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationHasValuesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecificationProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", null)
                        .WithMany("HasValuesOf")
                        .HasForeignKey("TestSpecificationDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("TestSpecificationDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationIsMadeUpOfCriteriaRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecificationCriteria", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", null)
                        .WithMany("IsMadeUpOfCriteria")
                        .HasForeignKey("TestSpecificationDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationIsMadeUpOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", "Target")
                        .WithMany("IsMadeUpOf")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationSpecifiesTestForObjectRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestableObject", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", null)
                        .WithMany("SpecifiesTestForObject")
                        .HasForeignKey("TestSpecificationDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecification.TestSpecificationSpecifiesTestForOperationsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.OperationsTestRequirement", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", null)
                        .WithMany("SpecifiesTestForOperations")
                        .HasForeignKey("TestSpecificationDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecificationCriteria.TestSpecificationCriteriaReferencesRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.EvaluatedProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecificationCriteria", null)
                        .WithMany("References")
                        .HasForeignKey("TestSpecificationCriteriaDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestSpecificationProperty.TestSpecificationPropertyContainsRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecificationProperty", "Target")
                        .WithMany("Contains")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestableObject.TestableObjectHasTestableObjectPropertyValuesOfRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestableObjectProperty", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestableObject", null)
                        .WithMany("HasTestableObjectPropertyValuesOf")
                        .HasForeignKey("TestableObjectDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.TestableObject.TestableObjectSpecifiesRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestableObject", null)
                        .WithMany("Specifies")
                        .HasForeignKey("TestableObjectDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkCenter.WorkCenterWorkUnitRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter", "Source")
                        .WithMany("WorkUnit")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.WorkUnit", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionContainsEquipmentRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecification", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part4.WorkDefinition.WorkDefinition", null)
                        .WithMany("ContainsEquipment")
                        .HasForeignKey("WorkDefinitionDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionContainsMaterialRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part4.WorkDefinition.WorkDefinition", null)
                        .WithMany("ContainsMaterial")
                        .HasForeignKey("WorkDefinitionDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionContainsParameterRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.ParameterSpecification", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part4.WorkDefinition.WorkDefinition", null)
                        .WithMany("ContainsParameter")
                        .HasForeignKey("WorkDefinitionDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionContainsPersonnelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecification", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part4.WorkDefinition.WorkDefinition", null)
                        .WithMany("ContainsPersonnel")
                        .HasForeignKey("WorkDefinitionDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionContainsPhysicalAssetRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecification", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part4.WorkDefinition.WorkDefinition", null)
                        .WithMany("ContainsPhysicalAsset")
                        .HasForeignKey("WorkDefinitionDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.Common.Relationship.isa95.WorkDefinition.WorkDefinitionHierarchyScopeRelRelationship", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.Part4.WorkDefinition.WorkDefinition", null)
                        .WithMany("HierarchyScopeRel")
                        .HasForeignKey("WorkDefinitionDtId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.Area", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.Area", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.Enterprise", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.Enterprise", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.Site", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.Site", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.WorkUnit", b =>
                {
                    b.HasOne("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.WorkUnit", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.ProcessCell", b =>
                {
                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.ProcessCell", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.ProductionLine", b =>
                {
                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.ProductionLine", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.ProductionUnit", b =>
                {
                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.ProductionUnit", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.StorageZone", b =>
                {
                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.StorageZone", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.StorageUnit", b =>
                {
                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.WorkUnit", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.StorageUnit", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.Unit", b =>
                {
                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.WorkUnit", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.Unit", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.WorkCell", b =>
                {
                    b.HasOne("MOM.Domain.isa95.EquipmentHierarchy.WorkUnit", null)
                        .WithOne()
                        .HasForeignKey("MOM.Domain.isa95.EquipmentHierarchy.WorkCell", "DtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MOM.Domain.Permission.Menu", b =>
                {
                    b.Navigation("Buttons");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.HierarchyScope", b =>
                {
                    b.Navigation("Contains");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClass", b =>
                {
                    b.Navigation("HasPropertiesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IncludesPropertiesOf");

                    b.Navigation("IsAssembledFrom");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialClassProperty", b =>
                {
                    b.Navigation("Contains");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinition", b =>
                {
                    b.Navigation("HasPropertiesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IsAssembledFrom");

                    b.Navigation("IsMemberOfClass");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialDefinitionProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsTo");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLot", b =>
                {
                    b.Navigation("DefinedBy");

                    b.Navigation("HasValuesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IsAssembledFrom");

                    b.Navigation("IsAssembledFromSublot");

                    b.Navigation("StorageLocationRel");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialLotProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsTo");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Material.MaterialSublot", b =>
                {
                    b.Navigation("HasValuesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IsAssembledFrom");

                    b.Navigation("IsAssembledFromLot");

                    b.Navigation("IsMadeUpOf");

                    b.Navigation("StorageLocationRel");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocation", b =>
                {
                    b.Navigation("DefinedBy");

                    b.Navigation("HasValuesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IsMadeUpOf");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClass", b =>
                {
                    b.Navigation("HasPropertiesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IncludesPropertiesOf");

                    b.Navigation("IsMadeUpOf");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationClassProperty", b =>
                {
                    b.Navigation("Contains");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationalLocation.OperationalLocationProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsTo");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecification", b =>
                {
                    b.Navigation("CorrespondsToEquipment");

                    b.Navigation("CorrespondsToEquipmentClass");

                    b.Navigation("HasPropertiesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IsMadeUpOf");

                    b.Navigation("OperationalLocationRel");

                    b.Navigation("Specifies");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.EquipmentSpecificationProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsToClassProperty");

                    b.Navigation("MapsToProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecification", b =>
                {
                    b.Navigation("CorrespondsToClass");

                    b.Navigation("CorrespondsToDefinition");

                    b.Navigation("CorrespondsToLot");

                    b.Navigation("CorrespondsToSublot");

                    b.Navigation("HasPropertiesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IsAssembledFrom");

                    b.Navigation("Specifies");

                    b.Navigation("StorageLocationRel");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.MaterialSpecificationProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsToClassProperty");

                    b.Navigation("MapsToDefinitionProperty");

                    b.Navigation("MapsToLotProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.ParameterSpecification", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("HierarchyScopeRel");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecification", b =>
                {
                    b.Navigation("CorrespondsToPerson");

                    b.Navigation("CorrespondsToPersonnelClass");

                    b.Navigation("HasPropertiesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IsMadeUpOf");

                    b.Navigation("OperationalLocationRel");

                    b.Navigation("Specifies");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PersonnelSpecificationProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsToClassProperty");

                    b.Navigation("MapsToProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecification", b =>
                {
                    b.Navigation("CorrespondsToPhysicalAsset");

                    b.Navigation("CorrespondsToPhysicalAssetClass");

                    b.Navigation("HasPropertiesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IsMadeUpOf");

                    b.Navigation("PhysicalLocationRel");

                    b.Navigation("Specifies");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsDefinition.PhysicalAssetSpecificationProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsToClassProperty");

                    b.Navigation("MapsToProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.EvaluatedProperty", b =>
                {
                    b.Navigation("CorrespondsTo");

                    b.Navigation("MeasuredWithMethodOf");

                    b.Navigation("References");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.OperationsTestRequirement", b =>
                {
                    b.Navigation("CorrespondsToAnElementIn");

                    b.Navigation("MapsToAPropertyElementIn");

                    b.Navigation("Specifies");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecification", b =>
                {
                    b.Navigation("Evaluates");

                    b.Navigation("HasValuesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IsMadeUpOf");

                    b.Navigation("IsMadeUpOfCriteria");

                    b.Navigation("SpecifiesTestForObject");

                    b.Navigation("SpecifiesTestForOperations");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecificationCriteria", b =>
                {
                    b.Navigation("References");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestSpecificationProperty", b =>
                {
                    b.Navigation("Contains");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.OperationsTest.TestableObject", b =>
                {
                    b.Navigation("HasTestableObjectPropertyValuesOf");

                    b.Navigation("Specifies");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.Person", b =>
                {
                    b.Navigation("AvailablePermissions");

                    b.Navigation("DefinedBy");

                    b.Navigation("HasValuesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("OperationalLocationRel");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsTo");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClass", b =>
                {
                    b.Navigation("HasPropertiesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IncludesPropertiesOf");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.Personnel.PersonnelClassProperty", b =>
                {
                    b.Navigation("Contains");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.Equipment", b =>
                {
                    b.Navigation("DefinedBy");

                    b.Navigation("HasValuesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("ImplementedBy");

                    b.Navigation("IsMadeUpOf");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClass", b =>
                {
                    b.Navigation("HasPropertiesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IncludesPropertiesOf");

                    b.Navigation("IsMadeUpOf");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentClassProperty", b =>
                {
                    b.Navigation("Contains");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.EquipmentProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsTo");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAsset", b =>
                {
                    b.Navigation("DefinedBy");

                    b.Navigation("HasValuesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IsMadeUpOf");

                    b.Navigation("PhysicalLocationRel");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClass", b =>
                {
                    b.Navigation("HasPropertiesOf");

                    b.Navigation("HierarchyScopeRel");

                    b.Navigation("IncludesPropertiesOf");

                    b.Navigation("IsMadeUpOf");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetClassProperty", b =>
                {
                    b.Navigation("Contains");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.PhysicalAssetAndEquipment.PhysicalAssetProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsTo");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part2.ProcessSegment.MaterialSegmentSpecificationProperty", b =>
                {
                    b.Navigation("Contains");

                    b.Navigation("MapsToClassProperty");

                    b.Navigation("MapsToDefinitionProperty");

                    b.Navigation("MapsToLotProperty");
                });

            modelBuilder.Entity("MOM.Domain.isa95.CommonObjectModels.Part4.WorkDefinition.WorkDefinition", b =>
                {
                    b.Navigation("ContainsEquipment");

                    b.Navigation("ContainsMaterial");

                    b.Navigation("ContainsParameter");

                    b.Navigation("ContainsPersonnel");

                    b.Navigation("ContainsPhysicalAsset");

                    b.Navigation("HierarchyScopeRel");
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.Area", b =>
                {
                    b.Navigation("WorkCenter");
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.Enterprise", b =>
                {
                    b.Navigation("Site");
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.Site", b =>
                {
                    b.Navigation("Area");
                });

            modelBuilder.Entity("MOM.Domain.isa95.EquipmentHierarchy.WorkCenter", b =>
                {
                    b.Navigation("WorkUnit");
                });
#pragma warning restore 612, 618
        }
    }
}

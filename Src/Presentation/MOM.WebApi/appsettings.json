{
  "EnterpriseSettings": {
    "Name": "某制造企业",
    "Description": "某制造企业描述"
  },
  "UseInMemoryDatabase": false,
  "ConnectionStrings": {
    "DefaultConnection": "Data Source=(localdb)\\ProjectModels;Initial Catalog=MOM2;Integrated Security=True;MultipleActiveResultSets=True;TrustServerCertificate=True",
    "FileManagerConnection": "Data Source=(localdb)\\ProjectModels;Initial Catalog=MOM_FileManager;Integrated Security=True;MultipleActiveResultSets=True;TrustServerCertificate=True",
    "HangfireConnection": "Data Source=(localdb)\\ProjectModels;Initial Catalog=MOM_Hangfire;Integrated Security=True;MultipleActiveResultSets=True;TrustServerCertificate=True"
  },
  "IdentitySettings": {
    "PasswordRequireDigit": true,
    "PasswordRequiredLength": 5,
    "PasswordRequireNonAlphanumeric": true,
    "PasswordRequireUppercase": true,
    "PasswordRequireLowercase": true
  },
  "JwtSettings": {
    "Key": "C1CF4B7DC4C4175B6618DE4F55CA4AAA",
    "Issuer": "CoreIdentity",
    "Audience": "CoreIdentityUser",
    "DurationInMinutes": 480
  },

  "Serilog": {
    "Using": [
      "Serilog.Sinks.File",
      "Serilog.Sinks.Console",
      "Serilog.Settings.Configuration",
      "Serilog.Expressions"
    ],
    //日志等级有小到大：Verbose->Debug->Information->Warning->Error->Fatal
    "MinimumLevel": {
      "Default": "Verbose",
      "Override": {
        "Microsoft": "Debug",
        "System": "Debug",
        "Microsoft.AspNetCore": "Error",
        "Microsoft.AspNetCore.Cors.Infrastructure.CorsService": "Error",
        "Microsoft.AspNetCore.Mvc": "Error",
        "Microsoft.AspNetCore.Hosting": "Error"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "【时间】{Timestamp:yyyy-MM-dd HH:mm:ss,fff}{NewLine}【等级】[{Level}]{NewLine}【消息】[{SourceContext}] {Message:lj}{NewLine}{Exception}{NewLine}"
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Debug'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "logs/debug/.log",
                  "rollingInterval": "Day",
                  "outputTemplate": "【时间】{Timestamp:yyyy-MM-dd HH:mm:ss,fff}{NewLine}【等级】[{Level}]{NewLine}【消息】[{SourceContext}] {Message:lj}{NewLine}{Exception}{NewLine}"
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Information'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "logs/information/.log",
                  "rollingInterval": "Day",
                  "outputTemplate": "【时间】{Timestamp:yyyy-MM-dd HH:mm:ss,fff}{NewLine}【等级】[{Level}]{NewLine}【消息】[{SourceContext}] {Message:lj}{NewLine}{Exception}{NewLine}"
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Warning'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "logs/warning/.log",
                  "rollingInterval": "Day",
                  "outputTemplate": "【时间】{Timestamp:yyyy-MM-dd HH:mm:ss,fff}{NewLine}【等级】[{Level}]{NewLine}【消息】[{SourceContext}] {Message:lj}{NewLine}{Exception}{NewLine}"
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l = 'Error'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "logs/error/.log",
                  "rollingInterval": "Day",
                  "outputTemplate": "【时间】{Timestamp:yyyy-MM-dd HH:mm:ss,fff}{NewLine}【等级】[{Level}]{NewLine}【消息】[{SourceContext}] {Message:lj}{NewLine}{Exception}{NewLine}"
                }
              }
            ]
          }
        }
      }
    ]
  },
  "Localization": {
    "DefaultRequestCulture": "en",
    "SupportedCultures": [ "en", "fa" ]
  }
}
